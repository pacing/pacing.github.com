<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Pacing's Blog]]></title>
  <link href="http://pacing.github.com/atom.xml" rel="self"/>
  <link href="http://pacing.github.com/"/>
  <updated>2012-10-16T22:42:31+08:00</updated>
  <id>http://pacing.github.com/</id>
  <author>
    <name><![CDATA[Pacing]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Git之路（二）]]></title>
    <link href="http://pacing.github.com/blog/2012/10/15/gitzhi-lu-%28er-%29/"/>
    <updated>2012-10-15T21:46:00+08:00</updated>
    <id>http://pacing.github.com/blog/2012/10/15/gitzhi-lu-(er-)</id>
    <content type="html"><![CDATA[<p>上一篇，我们使用了git init，git add和git commit三个命令来创建一个git版本库。</p>

<!--more-->


<p>git init 初始化了一个版本库。</p>

<p>git add  将工作区（即工作目录）的内容添加到git缓存区。</p>

<p>git commit 将缓存区的内容添加到git版本库。</p>

<p>今天这篇文章着重关于git缓存区这个概念。</p>

<p>一个例子</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># git init
</span><span class='line'># touch welcome.txt
</span><span class='line'># echo "Hello." >> welcome.txt
</span><span class='line'># git add
</span><span class='line'>.git/        welcome.txt
</span><span class='line'># git add welcome.txt
</span><span class='line'># git commit -m "first commit" 
</span><span class='line'>[master (root-commit) 4bab956] first commit
</span><span class='line'> 1 file changed, 1 insertion(+)
</span><span class='line'> create mode 100644 welcome.txt
</span><span class='line'># echo "Nice to meet you." >> welcome.txt
</span><span class='line'># git diff
</span><span class='line'>diff --git a/welcome.txt b/welcome.txt
</span><span class='line'>index 18832d3..fd3c069 100644
</span><span class='line'>--- a/welcome.txt
</span><span class='line'>+++ b/welcome.txt
</span><span class='line'>@@ -1 +1,2 @@
</span><span class='line'> Hello.
</span><span class='line'>+Nice to meet you.
</span><span class='line'># git commit -m "second commit"
</span><span class='line'># On branch master
</span><span class='line'># Changes not staged for commit:
</span><span class='line'>#   (use "git add &lt;file>..." to update what will be committed)
</span><span class='line'>#   (use "git checkout -- &lt;file>..." to discard changes in working directory)
</span><span class='line'>#
</span><span class='line'>#       modified:   welcome.txt
</span><span class='line'>#
</span><span class='line'>no changes added to commit (use "git add" and/or "git commit -a")</span></code></pre></td></tr></table></div></figure>


<p>可以看出来，第二次提交并没有成功，为什么呢？对比第一次我们可以发现，少了一个git add 命令。接下来再试一次</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># git add welcome.txt
</span><span class='line'># git commit -m "second commit"
</span><span class='line'>[master 9226a29] second commit
</span><span class='line'> 1 file changed, 1 insertion(+)
</span><span class='line'># git log --pretty=oneline
</span><span class='line'>9226a29471e7c7913a478996ab29a77f43584d7c second commit
</span><span class='line'>4bab95647dae270bcb824dc3b8b5b019d623f35a first commit</span></code></pre></td></tr></table></div></figure>


<p>通过日志我们可以发现，提交成功了。</p>

<p>结合上面的例子，我们可以建立一个很深刻的印象，一个git版本库，对应了一个工作区和>暂存区以及HEAD三个“空间”。</p>

<p>三个“空间”文件内容的对比：git diff 魔法</p>

<p>工作区和暂存区的对比： git diff</p>

<p>暂存区和HEAD比较：git diff &#8211;cached</p>

<p>工作区和HEAD的比较： git diff HEAD</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git之路（一）]]></title>
    <link href="http://pacing.github.com/blog/2012/10/14/gitzhi-lu-%28%5B%3F%5D-%29/"/>
    <updated>2012-10-14T21:09:00+08:00</updated>
    <id>http://pacing.github.com/blog/2012/10/14/gitzhi-lu-([?]-)</id>
    <content type="html"><![CDATA[<p>最近在学习Git，至于分布式版本控制系统Git的强大之处，我就不再赘述了，google之。
现在开始我们Git世界的旅行吧</p>

<p>1.安装</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install git
</span><span class='line'>sudo apt-get install git-doc git-svn git-email git-gui gitk</span></code></pre></td></tr></table></div></figure>




<!-- more -->


<p>2.Git初始化</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>git --version (查询git版本)
</span><span class='line'>git config --global user.name "pacing"
</span><span class='line'>git config --global user.email "email@x.com"</span></code></pre></td></tr></table></div></figure>


<p>3.开始第一次实践</p>

<blockquote></blockquote>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir demo
</span><span class='line'>cd demo
</span><span class='line'>git init</span></code></pre></td></tr></table></div></figure>


<p>以上步骤在git 1.6.5以上的版本可以用命令行 git init demo 代替</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ls -aF</span></code></pre></td></tr></table></div></figure>


<p>这个命令行显示当前文件目录，其中有一个.git/隐藏目录,称为Git版本库</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>echo "Hello" > welcome.txt
</span><span class='line'>git add welcome.txt
</span><span class='line'>git commit -m "initialized"</span></code></pre></td></tr></table></div></figure>


<p>4.总结一下</p>

<p>步骤二，我们设置了该linux用户名下的Git用户名及邮箱地址</p>

<p>步骤三，我们建立了一个demo文件夹（称之为git工作区）并在文件夹内初始化了git版本库，之后新建了内容为Hello的welcomet.xt文本文件。接下来git add welcome.txt命令将工作区文件welcome.txt提交到了暂存区，git commit -m &#8220;initialized&#8221;命令将暂存区文件welcome.txt提交到版本库。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[人生是一场带着枷锁的舞蹈]]></title>
    <link href="http://pacing.github.com/blog/2012/10/12/ren-sheng-shi-%5B%3F%5D-chang-dai-zhao-jia-suo-de-wu-dao/"/>
    <updated>2012-10-12T16:43:00+08:00</updated>
    <id>http://pacing.github.com/blog/2012/10/12/ren-sheng-shi-[?]-chang-dai-zhao-jia-suo-de-wu-dao</id>
    <content type="html"><![CDATA[<!--more -->


<p><video width='640' height='320' preload='none' controls poster=' http://s3.imathis.com/video/zero-to-fancy-buttons.png'><source src='http://s3.imathis.com/video/zero-to-fancy-buttons.mp4' type='video/mp4; codecs="avc1.42E01E, mp4a.40.2"'/></video></p>

<h3>没有人可以逃脱枷锁</h3>

<h3>人只能选择枷锁的类型</h3>

<h3>选择你的枷锁，然后痛并快乐着</h3>

<h3>即使被锁着，也要在舞曲开始的时候让自己优雅，跳好人生这场舞</h3>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[post title]]></title>
    <link href="http://pacing.github.com/blog/2012/10/12/post-title/"/>
    <updated>2012-10-12T15:20:00+08:00</updated>
    <id>http://pacing.github.com/blog/2012/10/12/post-title</id>
    <content type="html"><![CDATA[<!-- more -->


<h1>这是 H1</h1>

<div><script src='https://gist.github.com/3877996.js?file='></script>
<noscript><pre><code>public class C {
  int a = b + 3;
  int b = 5;
}</code></pre></noscript></div>


<h3>这是H3</h3>

<p><span class='pullquote-right' data-pullquote='surround it like this'>
Surround your paragraph with the pull quote tags. Then when you come to
the text you want to pull, surround it like this and that&#8217;s all there is to it.
</span></p>
]]></content>
  </entry>
  
</feed>
